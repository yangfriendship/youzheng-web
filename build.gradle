buildscript {
    ext {
        springBootVersion = '2.6.2'
        dependencyManagementVersion = '1.0.11.RELEASE'
        queryDslVersion = '5.0.0'
        querydslPluginVersion = '1.0.10'
    }

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:${dependencyManagementVersion}"
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}"
    }
}

allprojects {
    group = "me.youzheng.youzheng-web"
    version = "0.0.1-SNAPSHOT"
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    sourceCompatibility = "1.8"

    repositories {
        mavenCentral()
    }

    ext {
        set('springCloudVersion', "2021.0.0")
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-security'
        compileOnly 'org.projectlombok:lombok'
        testImplementation 'org.springframework.security:spring-security-test'

        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.session:spring-session-data-redis'
        // JWT
        implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.1'
        runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.1'
        runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.1'

        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        annotationProcessor 'org.projectlombok:lombok'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        // Data
        runtimeOnly 'com.h2database:h2'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        runtimeOnly 'mysql:mysql-connector-java'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        implementation 'org.springframework.boot:spring-boot-starter-test'

        // for QueryDSL
        implementation "com.querydsl:querydsl-core:${queryDslVersion}"
        implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
        annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jpa"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
        implementation 'org.springframework.boot:spring-boot-starter-web'

        implementation 'org.mapstruct:mapstruct:1.3.1.Final'
        annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"

        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    }
}

project(':user-service') {
    dependencies {
        implementation project(':common')
    }
}

project(':board-service') {
    dependencies {
        implementation project(':common')
    }
}

project(':reply-service') {
    dependencies {
        implementation project(':common')
    }
}

task cleanGeneatedDir(type: Delete) {
    delete file('src/main/generated')
}